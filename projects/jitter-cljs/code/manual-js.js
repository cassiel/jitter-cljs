// Generated by CoffeeScript 1.8.0
(function() {
  var i, n, t, _i, _j, _len, _len1, _ref, _ref1;

  this.autowatch = 1;

  this.myWindow = new JitterObject("jit.window", "WINDOW");

  this.myRender = new JitterObject("jit.gl.render", "WINDOW");

  this.myNodes = (function() {
    var _i, _results;
    _results = [];
    for (i = _i = 0; _i <= 9; i = ++_i) {
      _results.push(new JitterObject("jit.gl.node", "WINDOW"));
    }
    return _results;
  })();

  _ref = this.myNodes;
  for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
    n = _ref[i];
    n.name = "NODE_" + i;
    n.position = [0, (i - 4.5) / 10, 0];
  }

  this.myTexts = (function() {
    var _j, _results;
    _results = [];
    for (i = _j = 0; _j <= 9; i = ++_j) {
      _results.push(new JitterObject("jit.gl.text", "NODE_" + i));
    }
    return _results;
  })();

  _ref1 = this.myTexts;
  for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {
    t = _ref1[i];
    t.color = [1, 1, 1, 1];
    t.fontsize = 5;
    t.align = 1;
    t.position = [0, -0.3, 0];
    t.mode = "3d";
    t.font("Courier");
    t.text("Hello " + i);
  }

  this.bang = function() {
    var r;
    r = this.myRender;
    r.erase();
    r.drawclients();
    return r.swap();
  };

  this.die = function() {
    this.myTexts = [];
    return gc();
  };

  this.rotation = function(i, degrees) {
    return this.myNodes[i].rotate = [degrees, 0, 0, 1];
  };

  post("manual-js.coffee " + (Date()) + "\n");

}).call(this);
